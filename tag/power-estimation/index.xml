<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>power estimation | Home</title>
    <link>/tag/power-estimation/</link>
      <atom:link href="/tag/power-estimation/index.xml" rel="self" type="application/rss+xml" />
    <description>power estimation</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 01 Sep 2021 18:08:38 -0400</lastBuildDate>
    <image>
      <url>/images/icon_hufdd866d90d76849587aac6fbf27da1ac_464_512x512_fill_lanczos_center_2.png</url>
      <title>power estimation</title>
      <link>/tag/power-estimation/</link>
    </image>
    
    <item>
      <title>Upstrap for estimating power and sample size in complex models</title>
      <link>/publication/upstrap_for_estimating_power/</link>
      <pubDate>Wed, 01 Sep 2021 18:08:38 -0400</pubDate>
      <guid>/publication/upstrap_for_estimating_power/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Upstrap for estimating power and sample size in complex models</title>
      <link>/project/project_upstrap/</link>
      <pubDate>Wed, 01 Sep 2021 11:54:53 -0400</pubDate>
      <guid>/project/project_upstrap/</guid>
      <description>&lt;p&gt;Power and sample size calculation are major components of statistical analyses. The upstrap resampling method was proposed as a general solution to this problem.&lt;/p&gt;
&lt;p&gt;We evaluate power estimation properties of the upstrap and provide a series of &amp;ldquo;read, adapt and use&amp;rdquo; R code examples for power estimation in simple and complex settings (&lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2021.08.21.457220v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bioRxiv preprint&lt;/a&gt;).&lt;/p&gt;
&lt;!---
&lt;span style=&#34;color:purple&#34;&gt;**See images citation and/or credit information** [below](#custom)&lt;/span&gt;.
--&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#scientific-problem&#34;&gt;Scientific problem&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#challenges&#34;&gt;Challenges&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#proposed-solution&#34;&gt;Proposed solution&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#code-example-testing-for-significance-of-lm-coefficient&#34;&gt;Code example: testing for significance of LM coefficient&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#contributions&#34;&gt;Contributions&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h3 id=&#34;scientific-problem&#34;&gt;Scientific problem&lt;/h3&gt;
&lt;p&gt;We consider the following problem: given an observed data sample $\mathbf{x}$ of sample size $N$, given specific null and alternative hypothesis, and a test statistic, assuming significance level $\alpha$, estimate sample size $M$ required to achieve power $1 -\beta$ (i.e., to achieve probability $1 -\beta$ of rejecting the null hypothesis when the null is true).&lt;/p&gt;
&lt;p&gt;Here, we consider the tasks to estimate the power to detect:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;an effect size observed in the data;&lt;/li&gt;
&lt;li&gt;an effect size chosen by a researcher.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We aim to ddress complex settings, including testing significance of model coefficients in: LM, GLM, LMM, GLMM, GEE, and others.&lt;/p&gt;
&lt;h3 id=&#34;challenges&#34;&gt;Challenges&lt;/h3&gt;
&lt;p&gt;For multilevel data settings, the existing approaches tend to fall into two categories.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First are theoretical results for estimating power in specific multilevel data setups; these often use assumptions about the intra-class correlation coefficient, and/or assume a particular study design (e.g., that
the data are balanced). &lt;/br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another class is based on simulations. Such may require specifying a population model for the data, simulating data from the assumed model, and estimating the power via Monte Carlo simulations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The former arguably lacks flexibility; in addition, finding and then determining applicability of a theoretical result may be difficult. The latter is flexible but involves potentially complex programming task.&lt;/p&gt;
&lt;h3 id=&#34;proposed-solution&#34;&gt;Proposed solution&lt;/h3&gt;
&lt;h4 id=&#34;upstrap&#34;&gt;Upstrap&lt;/h4&gt;
&lt;p&gt;The upstrap resampling method (&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7868048/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crainiceanu, C.M., Crainiceanu, A. (2020)&lt;/a&gt;) was proposed as a general
solution to this problem.&lt;/p&gt;
&lt;p&gt;Upstrap starts with a sample (observed data) and resamples with replacement either fewer or more samples than in the original data set. The below example shows difference between bootstrap and upstrap resample.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# simulate data 
x &amp;lt;- rnorm(n = 10)

# bootstrap resample
x_b &amp;lt;- sample(x, size = 10, replace = TRUE)

# upstrap resample (case: more samples than in original x) 
x_u &amp;lt;- sample(x, size = 20, replace = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;upstrap-for-estimating-power&#34;&gt;Upstrap for estimating power&lt;/h4&gt;
&lt;p&gt;Given observed data sample $\mathbf{x}$, to estimate power for a target sample size, we propose:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generate $B$ resamples of target sample size by sampling with replacement from $\mathbf{x}$.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perform  hypothesis test on each resample.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estimate power as the proportion of $B$ resamples where the null hypothesis was rejected.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The above procedure estimates power corresponding to the effect size &lt;em&gt;observed&lt;/em&gt; in the sample $\mathbf{x}$. For example, for one-sample t-test, the above procedure estimates:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;power.t.test(delta = mean(x), sd = sd(x), ...)$power
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;upstrap-for-estimating-power-specific-effect-size&#34;&gt;Upstrap for estimating power: specific effect size&lt;/h4&gt;
&lt;p&gt;In practice, one is often is interested in estimating power for a &lt;em&gt;specific&lt;/em&gt; effect size. For example, for one-sample t-test, a specific effect size could be set to 0.3:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;power.t.test(delta = 0.3, sd = sd(x), ...)$power
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To address such cases, we propose to update  response variable values in the observed sample $\mathbf{x}$ to ensure the effect size in this updated data is our target effect size. Details are provided in the &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2021.08.21.457220v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;preprint&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;code-example-testing-for-significance-of-lm-coefficient&#34;&gt;Code example: testing for significance of LM coefficient&lt;/h3&gt;
&lt;p&gt;Below, we demonstrate the upstrap power estimation method for testing for significance of LM coefficient. In the &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2021.08.21.457220v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;preprint&lt;/a&gt;, we provide more R code examples, including testing for significance of coefficient in LM, GLM, LMM, GLMM.&lt;/p&gt;
&lt;p&gt;We define simulation parameters and simulate a sample of size $N = 50$.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
(Click to see setup definition and R code.)
&lt;/summary&gt;
&lt;h4 id=&#34;setup&#34;&gt;Setup&lt;/h4&gt;
&lt;p&gt;Consider a random sample with $N = 50$ independent observations (e.g., 50 subjects, 1 observation per subject). Assume a continuous response variable $Y$ and two covariates: dichotomous $X_1$, continuous $X_2$. We are interested in estimating power of test for significance of the coefficient $\beta_{1}$ in linear model $Y_{i}=\beta_{0}+\beta_{1} X_{1 i}+\beta_{2} X_{2 i}+\varepsilon_{i}$, where $i=1, \ldots, N$ and $\varepsilon_{i} \sim_{\text {iid }} N\left(0, \sigma^{2}\right)$.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# simulation parameters
N &amp;lt;- 50
coef_x0 &amp;lt;- 0
coef_x1 &amp;lt;- 0.2
coef_x2 &amp;lt;- 0.1
sigma2  &amp;lt;- 1

# simulate sample
set.seed(1)
subjid_i &amp;lt;- 1 : N # subject ID unique in data set
x1_i  &amp;lt;- rbinom(n = N, size = 1, prob = 0.5)
x2_i  &amp;lt;- rbinom(n = N, size = 1, prob = 0.5)
eps_i &amp;lt;- rnorm(N, sd = sqrt(sigma2))
y_i   &amp;lt;- coef_x0 + (coef_x1 * x1_i) + (coef_x2 * x2_i)  + eps_i
dat   &amp;lt;- data.frame(y = y_i, x1 = x1_i, x2 = x2_i, subjid = subjid_i)
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(dat)
# &#39;data.frame&#39;:	50 obs. of  4 variables:
#  $ y     : num  0.398 -0.512 0.541 -0.929 1.433 ...
#  $ x1    : int  0 0 1 1 0 1 1 1 1 0 ...
#  $ x2    : int  0 1 0 0 0 0 0 1 1 0 ...
#  $ subjid: int  1 2 3 4 5 6 7 8 9 10 ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We get the observed effect size.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fit &amp;lt;- lm(y ~ x1 + x2, data = dat)
coef(fit)[&amp;quot;x1&amp;quot;]
# 0.5585879 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We estimate the test power via the upstrap.&lt;/p&gt;
&lt;h4 id=&#34;case-target-sample-size-m--n--50-target-effect-size-as-observed-in-the-sample&#34;&gt;Case: target sample size M = N = 50, target effect size as observed in the sample&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# number of upstrap resamples
B_boot &amp;lt;- 1000
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;out &amp;lt;- rep(NA, B_boot)
for (rr in 1 : B_boot){
  dat_rr_idx &amp;lt;- sample(1 : nrow(dat), replace = TRUE)
  dat_rr &amp;lt;- dat[dat_rr_idx, ]
  fit_rr &amp;lt;- lm(y ~ x1 + x2, data = dat_rr)
  pval_rr &amp;lt;- summary(fit_rr)$coef[&amp;quot;x1&amp;quot;, 4]
  out[rr] &amp;lt;- (pval_rr &amp;lt; 0.05)
}
mean(out)
# [1] 0.493
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;case-target-sample-size-m--100-target-effect-size-as-observed-in-the-sample&#34;&gt;Case: target sample size M = 100, target effect size as observed in the sample&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;out &amp;lt;- rep(NA, B_boot)
for (rr in 1 : B_boot){
  dat_rr_idx &amp;lt;- sample(1 : nrow(dat), size = 100, replace = TRUE)
  dat_rr &amp;lt;- dat[dat_rr_idx, ]
  fit_rr &amp;lt;- lm(y ~ x1 + x2, data = dat_rr)
  pval_rr &amp;lt;- summary(fit_rr)$coef[&amp;quot;x1&amp;quot;, 4]
  out[rr] &amp;lt;- (pval_rr &amp;lt; 0.05)
}
mean(out)
# [1] 0.773
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;case-target-sample-size-m--100-target-effect-size-set-to-08&#34;&gt;Case: target sample size M = 100, target effect size set to 0.8&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# update the outcome in the sample to represent the target effect size
dat_upd &amp;lt;- dat
dat_upd$y &amp;lt;- dat_upd$y + (0.8 - coef(fit)[&amp;quot;x1&amp;quot;]) * dat_upd$x1
out &amp;lt;- rep(NA, B_boot)
for (rr in 1 : B_boot){
  dat_rr_idx &amp;lt;- sample(1 : nrow(dat_upd), size = 100, replace = TRUE)
  dat_rr &amp;lt;- dat_upd[dat_rr_idx, ]
  fit_rr &amp;lt;- lm(y ~ x1 + x2, data = dat_rr)
  pval_rr &amp;lt;- summary(fit_rr)$coef[&amp;quot;x1&amp;quot;, 4]
  out[rr] &amp;lt;- (pval_rr &amp;lt; 0.05)
}
mean(out)
# [1] 0.92
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;contributions&#34;&gt;Contributions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Our preprint: Karas, M., Crainiceanu, C.M. (2021) &lt;em&gt;Upstrap for estimating power and sample size in complex models&lt;/em&gt; &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2021.08.21.457220v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;is available on bioRxiv&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
